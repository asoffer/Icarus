-- ::= import "string/match.ic"

#{export}
WithoutPrefix ::= (s: [/]char, n: u64) -> [/]char {
  if (s.length < n) {
    return builtin.slice(s.data + s.length, 0)
  } else {
    return builtin.slice(s.data + n, s.length - n)
  }
}

#{export}
StripPrefix ::= (s: [/]char, prefix: [/]char) -> [/]char {
  if (s'StartsWith(prefix)) {
    return builtin.slice(s.data + prefix.length, s.length - prefix.length)
  }
  return s
}

#{export}
StripSuffix ::= (s: [/]char, suffix: [/]char) -> [/]char {
  if (s'EndsWith(suffix)) {
    return builtin.slice(s.data, s.length - suffix.length)
  }
  return s
}

#{export}
WithoutSuffix ::= (s: [/]char, n: u64) -> [/]char {
  if (s.length < n) {
    return builtin.slice(s.data, 0)
  } else {
    return builtin.slice(s.data, s.length - n)
  }
}
