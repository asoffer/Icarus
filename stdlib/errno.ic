#{export}
error ::= enum {
  SUCCESS ::=  0 as u64
  EPERM   ::=  1 as u64  // Operation not permitted
  ENOENT  ::=  2 as u64  // No such file or directory
  ESRCH   ::=  3 as u64  // No such process
  EINTR   ::=  4 as u64  // Interrupted system call
  EIO     ::=  5 as u64  // I/O error
  ENXIO   ::=  6 as u64  // No such device or address
  E2BIG   ::=  7 as u64  // Argument list too long
  ENOEXEC ::=  8 as u64  // Exec format error
  EBADF   ::=  9 as u64  // Bad file number
  ECHILD  ::= 10 as u64  // No child processes
  EAGAIN  ::= 11 as u64  // Try again
  ENOMEM  ::= 12 as u64  // Out of memory
  EACCES  ::= 13 as u64  // Permission denied
  EFAULT  ::= 14 as u64  // Bad address
  ENOTBLK ::= 15 as u64  // Block device required
  EBUSY   ::= 16 as u64  // Device or resource busy
  EEXIST  ::= 17 as u64  // File exists
  EXDEV   ::= 18 as u64  // Cross-device link
  ENODEV  ::= 19 as u64  // No such device
  ENOTDIR ::= 20 as u64  // Not a directory
  EISDIR  ::= 21 as u64  // Is a directory
  EINVAL  ::= 22 as u64  // Invalid argument
  ENFILE  ::= 23 as u64  // File table overflow
  EMFILE  ::= 24 as u64  // Too many open files
  ENOTTY  ::= 25 as u64  // Not a typewriter
  ETXTBSY ::= 26 as u64  // Text file busy
  EFBIG   ::= 27 as u64  // File too large
  ENOSPC  ::= 28 as u64  // No space left on device
  ESPIPE  ::= 29 as u64  // Illegal seek
  EROFS   ::= 30 as u64  // Read-only file system
  EMLINK  ::= 31 as u64  // Too many links
  EPIPE   ::= 32 as u64  // Broken pipe
  EDOM    ::= 33 as u64  // Math argument out of domain of func
  ERANGE  ::= 34 as u64  // Math result not representable
}

#{export} get ::= () -> error {
  return @foreign("errno", *i32) as error
}
