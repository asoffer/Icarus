c ::= import "c/types.ic"

// Basic operations
#{export} fabsf      ::= builtin.foreign("fabsf", c.float -> c.float)
#{export} fabs       ::= builtin.foreign("fabs", c.double -> c.double)
#{export} fmodf      ::= builtin.foreign("fmodf", (c.float, c.float) -> c.float)
#{export} fmod       ::= builtin.foreign("fmod", (c.double, c.double) -> c.double)
#{export} remainderf ::= builtin.foreign("remainderf", (c.float, c.float) -> c.float)
#{export} remainder  ::= builtin.foreign("remainder", (c.double, c.double) -> c.double)
#{export} remquof    ::= builtin.foreign("remquof", (c.float, c.float, *c.int) -> c.float)
#{export} remquo     ::= builtin.foreign("remquo", (c.double, c.double, *c.int) -> c.double)
#{export} fmaf       ::= builtin.foreign("fmaf", (c.float, c.float, c.float) -> c.float)
#{export} fma        ::= builtin.foreign("fma", (c.double, c.double, c.double) -> c.double)
#{export} fmaxf      ::= builtin.foreign("fmaxf", (c.float, c.float) -> c.float)
#{export} fmax       ::= builtin.foreign("fmax", (c.double, c.double) -> c.double)
#{export} fminf      ::= builtin.foreign("fminf", (c.float, c.float) -> c.float)
#{export} fmin       ::= builtin.foreign("fmin", (c.double, c.double) -> c.double)
#{export} fdimf      ::= builtin.foreign("fdimf", (c.float, c.float) -> c.float)
#{export} fdim       ::= builtin.foreign("fdim", (c.double, c.double) -> c.double)
#{export} nanf       ::= builtin.foreign("nanf", [*]char -> c.float)
#{export} nan        ::= builtin.foreign("nan", [*]char -> c.double)

// Exponential functions
#{export} expf   ::= builtin.foreign("expf", c.float -> c.float)
#{export} exp    ::= builtin.foreign("exp", c.double -> c.double)
#{export} exp2f  ::= builtin.foreign("exp2f", c.float -> c.float)
#{export} exp2   ::= builtin.foreign("exp2", c.double -> c.double)
#{export} expm1f ::= builtin.foreign("expm1f", c.float -> c.float)
#{export} expm1  ::= builtin.foreign("expm1", c.double -> c.double)
#{export} logf   ::= builtin.foreign("logf", c.float -> c.float)
#{export} log    ::= builtin.foreign("log", c.double -> c.double)
#{export} log10f ::= builtin.foreign("log10", c.float -> c.float)
#{export} log10  ::= builtin.foreign("log10", c.double -> c.double)
#{export} log2f  ::= builtin.foreign("log2", c.float -> c.float)
#{export} log2   ::= builtin.foreign("log2", c.double -> c.double)
#{export} log1pf ::= builtin.foreign("log1p", c.float -> c.float)
#{export} log1p  ::= builtin.foreign("log1p", c.double -> c.double)

// Power functions
#{export} powf   ::= builtin.foreign("powf", (c.float, c.float) -> c.float)
#{export} pow    ::= builtin.foreign("pow", (c.double, c.double) -> c.double)
#{export} sqrtf  ::= builtin.foreign("sqrtf", c.float -> c.float)
#{export} sqrt   ::= builtin.foreign("sqrt", c.double -> c.double)
#{export} cbrtf  ::= builtin.foreign("sqrtf", c.float -> c.float)
#{export} cbrt   ::= builtin.foreign("sqrt", c.double -> c.double)
#{export} hypotf ::= builtin.foreign("hypotf", c.float -> c.float)
#{export} hypot  ::= builtin.foreign("hypot", c.double -> c.double)

// Trigonometric functions
#{export} sinf   ::= builtin.foreign("sinf", c.float -> c.float)
#{export} sin    ::= builtin.foreign("sin", c.double -> c.double)
#{export} cosf   ::= builtin.foreign("cosf", c.float -> c.float)
#{export} cos    ::= builtin.foreign("cos", c.double -> c.double)
#{export} tanf   ::= builtin.foreign("tanf", c.float -> c.float)
#{export} tan    ::= builtin.foreign("tan", c.double -> c.double)
#{export} asinf  ::= builtin.foreign("asinf", c.float -> c.float)
#{export} asin   ::= builtin.foreign("asin", c.double -> c.double)
#{export} acosf  ::= builtin.foreign("acosf", c.float -> c.float)
#{export} acos   ::= builtin.foreign("acos", c.double -> c.double)
#{export} atanf  ::= builtin.foreign("atanf", c.float -> c.float)
#{export} atan   ::= builtin.foreign("atan", c.double -> c.double)
#{export} atan2  ::= builtin.foreign("atan2", (c.double, c.double) -> c.double)
#{export} atan2f ::= builtin.foreign("atan2f", (c.float, c.float) -> c.float)

// Hyperbolic functions
#{export} sinhf   ::= builtin.foreign("sinhf", c.float -> c.float)
#{export} sinh    ::= builtin.foreign("sinh", c.double -> c.double)
#{export} coshf   ::= builtin.foreign("coshf", c.float -> c.float)
#{export} cosh    ::= builtin.foreign("cosh", c.double -> c.double)
#{export} tanhf   ::= builtin.foreign("tanhf", c.float -> c.float)
#{export} tanh    ::= builtin.foreign("tanh", c.double -> c.double)
#{export} asinhf  ::= builtin.foreign("asinhf", c.float -> c.float)
#{export} asinh   ::= builtin.foreign("asinh", c.double -> c.double)
#{export} acoshf  ::= builtin.foreign("acoshf", c.float -> c.float)
#{export} acosh   ::= builtin.foreign("acosh", c.double -> c.double)
#{export} atanhf  ::= builtin.foreign("atanhf", c.float -> c.float)
#{export} atanh   ::= builtin.foreign("atanh", c.double -> c.double)
#{export} atanh2  ::= builtin.foreign("atanh2", (c.double, c.double) -> c.double)

// Error and gamma functions
#{export} erff    ::= builtin.foreign("erff", c.float -> c.float)
#{export} erf     ::= builtin.foreign("erf", c.double -> c.double)
#{export} erfcf   ::= builtin.foreign("erfcf", c.float -> c.float)
#{export} erfc    ::= builtin.foreign("erfc", c.double -> c.double)
#{export} tgammaf ::= builtin.foreign("tgammaf", c.float -> c.float)
#{export} tgamma  ::= builtin.foreign("tgamma", c.double -> c.double)
#{export} lgammaf ::= builtin.foreign("lgammaf", c.float -> c.float)
#{export} lgamma  ::= builtin.foreign("lgamma", c.double -> c.double)

// Nearest integer floating-point operations
#{export} ceilf      ::= builtin.foreign("ceilf", c.float -> c.float)
#{export} ceil       ::= builtin.foreign("ceil", c.double -> c.double)
#{export} floorf     ::= builtin.foreign("floorf", c.float -> c.float)
#{export} floor      ::= builtin.foreign("floor", c.double -> c.double)
#{export} truncf     ::= builtin.foreign("truncf", c.float -> c.float)
#{export} trunc      ::= builtin.foreign("trunc", c.double -> c.double)
#{export} roundf     ::= builtin.foreign("roundf", c.float -> c.float)
#{export} round      ::= builtin.foreign("round", c.double -> c.double)
#{export} lroundf    ::= builtin.foreign("lroundf", c.float -> c.long)
#{export} lround     ::= builtin.foreign("lround", c.double -> c.long)
#{export} llroundf   ::= builtin.foreign("llroundf", c.float -> c.long_long)
#{export} llround    ::= builtin.foreign("llround", c.double -> c.long_long)
#{export} nearbyintf ::= builtin.foreign("nearbyintf", c.float -> c.float)
#{export} nearbyint  ::= builtin.foreign("nearbyint", c.double -> c.double)
#{export} rintf      ::= builtin.foreign("rintf", c.float -> c.float)
#{export} rint       ::= builtin.foreign("rint", c.double -> c.double)
#{export} lrintf     ::= builtin.foreign("lrintf", c.float -> c.long)
#{export} lrint      ::= builtin.foreign("lrint", c.double -> c.long)
#{export} llrintf    ::= builtin.foreign("llrintf", c.float -> c.long_long)
#{export} llrint     ::= builtin.foreign("llrint", c.double -> c.long_long)


// Floating-point manipulation functions
#{export} frexpf     ::= builtin.foreign("frexpf", (c.float, *c.int) -> c.float)
#{export} frexp      ::= builtin.foreign("frexp", (c.double, *c.int) -> c.double)
#{export} ldexpf     ::= builtin.foreign("ldexpf", (c.float, c.int) -> c.float)
#{export} ldexp      ::= builtin.foreign("ldexp", (c.double, c.int) -> c.double)
#{export} modff      ::= builtin.foreign("modff", (c.float, *c.float) -> c.float)
#{export} modf       ::= builtin.foreign("modf", (c.double, *c.double) -> c.double)
#{export} scalbnf    ::= builtin.foreign("scalbnf", (c.float, c.int) -> c.float)
#{export} scalbn     ::= builtin.foreign("scalbn", (c.double, c.int) -> c.double)
#{export} scalblnf   ::= builtin.foreign("scalblnf", (c.float, c.long) -> c.float)
#{export} scalbln    ::= builtin.foreign("scalbln", (c.double, c.long) -> c.double)
#{export} ilogbf     ::= builtin.foreign("ilogbf", c.float -> c.int)
#{export} ilogb      ::= builtin.foreign("ilogb", c.double -> c.int)
#{export} logbf      ::= builtin.foreign("logbf", c.float -> c.float)
#{export} logb       ::= builtin.foreign("logb", c.double -> c.double)
#{export} nextafterf ::= builtin.foreign("nextafterf", (c.float, c.float) -> c.float)
#{export} nextafter  ::= builtin.foreign("nextafter", (c.double, c.double) -> c.double)
#{export} copysignf  ::= builtin.foreign("copysignf", (c.float, c.float) -> c.float)
#{export} copysign   ::= builtin.foreign("copysign", (c.double, c.double) -> c.double)
