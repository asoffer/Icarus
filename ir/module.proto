syntax = "proto3";

import "type/type_system.proto";

package ic;

message InstructionProto {
  enum OpCode {
    // Note: This needs to be kept in sync with the `jasmin::InstructionSet`
    // defined in "ir/function.h"
    CALL = 0;
    JUMP = 1;
    JUMP_IF = 2;
    RETURN = 3;
    PUSH = 4;
    PUSH_FUNCTION = 5;
    PUSH_STRING_LITERAL = 6;
    PUSH_TYPE = 7;
    DROP = 8;
    TYPE_KIND = 9;
    TYPE_KIND_EQUALS = 10;
    ROTATE = 11;
    CONSTRUCT_OPAQUE_TYPE = 12;
    CONSTRUCT_POINTER = 13;
    CONSTRUCT_BUFFER_POINTER = 14;
    CONSTRUCT_FUNCTION = 15;
    CONSTRUCT_PARAMETERS = 16;
    SWAP = 17;
    REGISTER_FOREIGN_FUNCTION = 18;
    INVOKE_FOREIGN_FUNCTION = 19;
  }
  OpCode op_code = 1;
  repeated uint64 content = 2;
}

message FunctionProto {
  uint32 parameters = 1;
  uint32 returns = 2;
  repeated InstructionProto instructions = 3;
}

message ForeignFunctionProto {
  uint32 name = 1;
  type.FunctionTypeProto type = 2;
}

message SymbolProto {
  type.TypeProto type = 1;
  repeated uint64 content = 2;
}

message ModuleProto {
  // Subroutine at which to begin execution.
  FunctionProto initializer = 1;

  // Subroutines defined within the module.
  repeated FunctionProto functions = 2;

  repeated string string_literals = 3;

  repeated ForeignFunctionProto foreign_functions = 4;

  type.TypeSystemProto type_system = 5;

  map<uint32, string> identifiers = 6;
  map<uint32, SymbolProto> exported_symbols = 7;
}
