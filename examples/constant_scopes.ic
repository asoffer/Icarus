io ::= import "io.ic"
-- ::= import "core.ic"

repeat (5) do {
  // This scope is executed in a run-time loop 5 times. Each iteration, it
  // increments a counter and compares the value to 5 to determine if it should
  // iterate again. 
  io.Print("hello\n")
}

#{const} repeat (5) do {
  // The body of this scope is also executed exactly 5 times, but because of the
  // #{const} annotation, the logic defining the scope is executed at
  // compile-time. This means that the loop that iterates five times is executed
  // at compile-time, stamping out the body of this block 5 times. If you were
  // to examine the generated code for this scope, you would see 5 calls to the
  // print function, but no counters or branching whatsoever.
  io.Print("hello\n")
}
