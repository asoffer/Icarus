#{export}
if ::= scope {
  init ::= (b: bool) => switch (b) {
    then        when true
    else | exit when false
  }
  then ::= block {
    before ::= () -> {}
    after ::= () => exit
  }
  else ::= block? {
    before ::= () -> {}
    after ::= () => exit
  }
  done ::=() -> {}
}

#{export}
while ::= scope {
  init ::= (b: bool) => switch (b) {
    do    when true
    exit  when false
  }
  do ::= block {
    before ::= () -> {}
    after ::= () => start
  }
  done ::= () -> {}
}
