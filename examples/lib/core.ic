#{export}
if ::= scope {
  init ::= (b: bool) -> () {
    jump switch (b) {
      then        when true
      else | exit when false
    }()
  }
  then ::= block {
    before ::= () -> () {}
    after ::= () -> () { jump exit() }
  }
  else ::= block? {
    before ::= () -> () {}
    after ::= () -> () { jump exit() }
  }
  done ::= () -> () {}
}

#{export}
while ::= scope {
  init ::= (b: bool) -> () {
    jump switch (b) {
      do   when true
      exit when false
    }()
  }
  do ::= block {
    before ::= () -> () {}
    after ::= () -> () { jump start() }
  }
  done ::= () -> () {}
}
