#{export}
Ascii ::= struct { _val: u8 }

#{export}
ascii ::= (val: u8) -> Ascii {
  c: Ascii
  c._val = val
  return c
}

#{export}
(print) ::= (c: Ascii) -> {
  putchar ::= foreign("putchar", u8 -> i32)
  putchar(c._val)
}

#{export}
is_eof ::= (c: Ascii) => c._val == 255 as u8

#{export}
read ::= () -> Ascii {
  getchar ::= foreign("getchar", () -> i32)
  c := ascii(getchar() as u8)
  return c
}
